// Generated by CoffeeScript 1.10.0
var Button, Component, React, ReactNative, StyleSheet, Task, TaskView, Text, View, styles,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

React = require("react");

Component = React.Component;

ReactNative = require("react-native");

View = ReactNative.View, Button = ReactNative.Button, Text = ReactNative.Text, StyleSheet = ReactNative.StyleSheet;

styles = (require("./styles.js")).styles;

Task = (require("./task.js")).Task;

TaskView = (function(superClass) {
  extend(TaskView, superClass);

  function TaskView() {
    return TaskView.__super__.constructor.apply(this, arguments);
  }

  TaskView.prototype.render = function() {
    return React.createElement(View, {
      "style": styles.taskrow
    }, React.createElement(Text, {
      "style": styles.checkbox
    }, "X"), React.createElement(Text, {
      "style": styles.task
    }, this.props.task.content));
  };

  return TaskView;

})(Component);

exports.TaskView = TaskView;
